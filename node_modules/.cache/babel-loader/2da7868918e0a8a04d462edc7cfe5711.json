{"ast":null,"code":"var _jsxFileName = \"/Users/Andreivan/git_study/FE_PatrimonyManagement/patrimony-management/src/components/patrimony_management/AssetFormComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport AuthenticationService from \"../../authentication/AuthenticationService\";\nimport AssetDataService from \"../../api/AssetDataService\";\nimport moment from 'moment';\n\nclass AssetFormComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      date: moment(new Date()).format('YYYY-MM-DD'),\n      initial_value: '',\n      company: '',\n      interest_rate: '',\n      is_active: '',\n      current_value: '',\n      is_variable_income: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.id === \"new\") {\n      return;\n    }\n\n    let token = AuthenticationService.getLoggedInToken();\n    let username = AuthenticationService.getLoggedInUserName();\n    AssetDataService.retrieveAsset(username, this.state.id, token).then(response => this.setState({\n      name: response.data.name,\n      date: moment(response.data.date).format('YYYY-MM-DD'),\n      initial_value: response.data.initial_value,\n      company: response.data.company,\n      interest_rate: response.data.interest_rate,\n      is_active: response.data.is_active,\n      current_value: response.data.current_value,\n      is_variable_income: response.data.is_variable_income\n    }));\n  }\n\n  onSubmit(values) {\n    let username = AuthenticationService.getLoggedInUserName();\n    let asset = {\n      id: this.state.id,\n      name: values.name,\n      date: values.date,\n      initial_value: values.initial_value,\n      company: values.company,\n      interest_rate: values.interest_rate,\n      is_active: values.is_active,\n      current_value: values.current_value,\n      is_variable_income: values.is_variable_income\n    };\n    let token = AuthenticationService.getLoggedInToken();\n\n    if (this.state.id === \"new\") {\n      AssetDataService.createAsset(username, asset, token).then(() => this.props.history.push('/assets'));\n    } else {\n      AssetDataService.updateAsset(username, this.state.id, asset, token).then(() => this.props.history.push('/assets'));\n    }\n  }\n\n  onCancel() {\n    window.history.back();\n  }\n\n  render() {\n    let {\n      name,\n      date,\n      initial_value,\n      company,\n      interest_rate,\n      is_active,\n      current_value,\n      is_variable_income\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"Asset\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"asset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        name,\n        date,\n        initial_value,\n        company,\n        interest_rate,\n        is_active,\n        current_value,\n        is_variable_income\n      },\n      onSubmit: this.onSubmit,\n      validateOnChange: false,\n      validateOnBlur: false,\n      validate: this.validate,\n      enableReinitialize: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, props => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, \"Date:\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"fieldCategA\",\n      type: \"date\",\n      name: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, \"Initial Value:\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"fieldCategA\",\n      type: \"text\",\n      name: \"initial_value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, \"Interest Rate:\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"fieldCategB\",\n      type: \"text\",\n      name: \"interest_rate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, \"Is Active?\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"checkbox\",\n      type: \"checkbox\",\n      name: \"is_active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, \"Is Variable Income?\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"checkbox\",\n      type: \"checkbox\",\n      name: \"is_variable_income\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \"Current Value:\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"fieldCategA\",\n      type: \"text\",\n      name: \"current_value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \"Company:\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"company\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: this.onCancel,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default AssetFormComponent;","map":{"version":3,"sources":["/Users/Andreivan/git_study/FE_PatrimonyManagement/patrimony-management/src/components/patrimony_management/AssetFormComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","AuthenticationService","AssetDataService","moment","AssetFormComponent","constructor","props","state","id","match","params","name","date","Date","format","initial_value","company","interest_rate","is_active","current_value","is_variable_income","onSubmit","bind","componentDidMount","token","getLoggedInToken","username","getLoggedInUserName","retrieveAsset","then","response","setState","data","values","asset","createAsset","history","push","updateAsset","onCancel","window","back","render","validate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport AuthenticationService from \"../../authentication/AuthenticationService\"\nimport AssetDataService from \"../../api/AssetDataService\"\nimport moment from 'moment'\n\nclass AssetFormComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      date: moment(new Date()).format('YYYY-MM-DD'),\n      initial_value: '',\n      company: '',\n      interest_rate: '',\n      is_active: '',\n      current_value: '',\n      is_variable_income: '',\n      \n    }\n    this.onSubmit = this.onSubmit.bind(this);\n\n  }\n\n  componentDidMount() {\n    if (this.state.id === \"new\") {\n      return;\n    }\n    let token = AuthenticationService.getLoggedInToken();\n    let username = AuthenticationService.getLoggedInUserName();\n    AssetDataService.retrieveAsset(username, this.state.id, token)\n      .then(response => this.setState({\n            name: response.data.name,\n            date: moment(response.data.date).format('YYYY-MM-DD'),\n            initial_value: response.data.initial_value,\n            company: response.data.company,\n            interest_rate: response.data.interest_rate,\n            is_active: response.data.is_active,\n            current_value: response.data.current_value,\n            is_variable_income: response.data.is_variable_income\n          }));\n  }\n\n  onSubmit(values) {      \n    let username = AuthenticationService.getLoggedInUserName();\n    let asset = {\n        id: this.state.id,\n        name: values.name,\n        date: values.date,\n        initial_value: values.initial_value,\n        company: values.company,\n        interest_rate: values.interest_rate,\n        is_active: values.is_active,\n        current_value: values.current_value,\n        is_variable_income: values.is_variable_income\n    }\n    let token = AuthenticationService.getLoggedInToken();\n    if(this.state.id === \"new\") { \n      AssetDataService.createAsset(username, asset, token)\n            .then(() => this.props.history.push('/assets'));\n    } else {              \n      AssetDataService.updateAsset(username, this.state.id, asset, token)\n            .then(() => this.props.history.push('/assets'));\n    }\n}\n\n  onCancel() {\n    window.history.back();\n  }\n\n  render() {\n    let {name, date, initial_value, company, interest_rate, is_active, current_value, is_variable_income} = this.state;\n\n    return (\n      <div className=\"text-center\">\n        <h1>Asset</h1>\n        <div className=\"asset\">\n          <Formik\n            initialValues={{name, date, initial_value, company, interest_rate, is_active, current_value, is_variable_income}}\n            onSubmit={this.onSubmit}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={this.validate}\n            enableReinitialize={true}\n          >\n            {(props) => (\n              <Form>\n                <fieldset className=\"form-group\">\n                  <label>Name:</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"name\" />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Date:</label>\n                  <Field\n                    className=\"fieldCategA\"\n                    type=\"date\"\n                    name=\"date\"\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Initial Value:</label>\n                  <Field\n                    className=\"fieldCategA\"\n                    type=\"text\"\n                    name=\"initial_value\"\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Interest Rate:</label>\n                  <Field\n                    className=\"fieldCategB\"\n                    type=\"text\"\n                    name=\"interest_rate\"\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Is Active?</label>\n                  <Field\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    name=\"is_active\"\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Is Variable Income?</label>\n                  <Field\n                    className=\"checkbox\"\n                    type=\"checkbox\"\n                    name=\"is_variable_income\"\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Current Value:</label>\n                  <Field\n                    className=\"fieldCategA\"\n                    type=\"text\"\n                    name=\"current_value\"\n                  />\n                </fieldset>\n                <fieldset className=\"form-group\">\n                  <label>Company:</label>\n                  <Field className=\"form-control\" type=\"text\" name=\"company\" />\n                </fieldset>\n                <button className=\"btn btn-success\" type=\"submit\">\n                  Save\n                </button>\n                <button className=\"btn btn-warning\" onClick={this.onCancel} type=\"button\">\n                  Cancel\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AssetFormComponent;\n"]},"metadata":{},"sourceType":"module"}