{"ast":null,"code":"var _jsxFileName = \"/Users/Andreivan/git_study/FE_PatrimonyManagement/src/components/patrimony_management/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from '../../authentication/AuthenticationService';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'Andreivan',\n      password: '',\n      hasLoginFailed: false,\n      showSuccesMessage: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    //console.log(this.state);\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password).then(response => {\n      AuthenticationService.registerSuccessfulLoginJwt(this.state.username, response.data.token);\n      this.props.history.push(`/dashboard`);\n    }).catch(() => {\n      this.setState({\n        showSuccesMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, this.state.hasLoginFailed && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 51\n      }\n    }, \"Invalid Credentials\"), this.state.showSuccesMessage && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 54\n      }\n    }, \"Login Sucessful\"), \"User Name: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 32\n      }\n    }), \"Password: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.loginClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"Login\")));\n  }\n\n} // function ShowInvalidCredentials(props) {    \n//     if(props.hasLoginFailed) {        \n//         return <div>Invalid Credentials</div>\n//     }\n//     return null        \n// }\n// function ShowLoginSuccesMessage(props) {    \n//     if(props.showSuccesMessage) {        \n//         return <div>Login Sucessful</div>\n//     }\n//     return null        \n// }\n\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/Andreivan/git_study/FE_PatrimonyManagement/src/components/patrimony_management/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccesMessage","handleChange","bind","loginClicked","event","setState","target","name","value","executeJwtAuthenticationService","then","response","registerSuccessfulLoginJwt","data","token","history","push","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,4CAAlC;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,WADD;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,iBAAiB,EAAE;AAJV,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAEH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB;AACA,SAAKC,QAAL,CAAc;AACV,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADxB,KAAd;AAGH;;AAEDL,EAAAA,YAAY,GAAG;AACXX,IAAAA,qBAAqB,CAACiB,+BAAtB,CAAsD,KAAKb,KAAL,CAAWC,QAAjE,EAA2E,KAAKD,KAAL,CAAWE,QAAtF,EACKY,IADL,CACYC,QAAD,IAAc;AACjBnB,MAAAA,qBAAqB,CAACoB,0BAAtB,CAAiD,KAAKhB,KAAL,CAAWC,QAA5D,EAAsEc,QAAQ,CAACE,IAAT,CAAcC,KAApF;AACA,WAAKnB,KAAL,CAAWoB,OAAX,CAAmBC,IAAnB,CAAyB,YAAzB;AACH,KAJL,EAIOC,KAJP,CAIc,MAAM;AACZ,WAAKZ,QAAL,CAAc;AAAEL,QAAAA,iBAAiB,EAAE;AAArB,OAAd;AACA,WAAKK,QAAL,CAAc;AAAEN,QAAAA,cAAc,EAAE;AAAlB,OAAd;AACH,KAPL;AAQH;;AAEDmB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKtB,KAAL,CAAWG,cAAX,iBAA6B;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHlC,EAIK,KAAKH,KAAL,CAAWI,iBAAX,iBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJrC,8BAKe;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKI,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALf,6BAMc;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAAzD;AAAmE,MAAA,QAAQ,EAAE,KAAKG,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANd,eAOI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPJ,CAFJ,CADJ;AAcH;;AA/CkC,C,CAkDvC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeV,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport AuthenticationService from '../../authentication/AuthenticationService'\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: 'Andreivan',\n            password: '',\n            hasLoginFailed: false,\n            showSuccesMessage: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.loginClicked = this.loginClicked.bind(this);\n\n    }\n\n    handleChange(event) {\n        //console.log(this.state);\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    loginClicked() {\n        AuthenticationService.executeJwtAuthenticationService(this.state.username, this.state.password)\n            .then( (response) => {\n                AuthenticationService.registerSuccessfulLoginJwt(this.state.username, response.data.token)\n                this.props.history.push(`/dashboard`)                \n            }).catch( () => {\n                this.setState({ showSuccesMessage: false })\n                this.setState({ hasLoginFailed: true })\n            })\n    }\n\n    render() {\n        return (\n            <div className=\"text-center\">\n                <h1 >Login</h1>\n                <div >\n                    {/* <ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed}></ShowInvalidCredentials>\n                    <ShowLoginSuccesMessage showSuccesMessage={this.state.showSuccesMessage}></ShowLoginSuccesMessage> */}\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.showSuccesMessage && <div>Login Sucessful</div>}\n                    User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}></input>\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}></input>\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n// function ShowInvalidCredentials(props) {    \n//     if(props.hasLoginFailed) {        \n//         return <div>Invalid Credentials</div>\n//     }\n//     return null        \n// }\n\n// function ShowLoginSuccesMessage(props) {    \n//     if(props.showSuccesMessage) {        \n//         return <div>Login Sucessful</div>\n//     }\n//     return null        \n// }\n\nexport default LoginComponent"]},"metadata":{},"sourceType":"module"}