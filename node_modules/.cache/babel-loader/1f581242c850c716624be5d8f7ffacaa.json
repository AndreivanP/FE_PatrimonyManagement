{"ast":null,"code":"import _classCallCheck from\"/Users/Andreivan/git_study/FE_PatrimonyManagement/patrimony-management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Andreivan/git_study/FE_PatrimonyManagement/patrimony-management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import axios from\"axios\";import{API_URL}from\"../Properties\";var USER_NAME_SESSION_ATTRIBUTE='authenticatedUser';var PASSWORD_SESSION_ATTRIBUTE='passwordUser';var TOKEN_SESSION_ATTRIBUTE='tokenUser';var AuthenticationService=/*#__PURE__*/function(){function AuthenticationService(){_classCallCheck(this,AuthenticationService);}_createClass(AuthenticationService,[{key:\"executeJwtAuthenticationService\",value:function executeJwtAuthenticationService(username,password){return axios.post(\"\".concat(API_URL,\"/authenticate\"),{username:username,password:password});}},{key:\"registerSuccessfulLoginJwt\",value:function registerSuccessfulLoginJwt(username,token){sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE,username);sessionStorage.setItem(TOKEN_SESSION_ATTRIBUTE,token);this.setupAxiosInterceptors(this.createJwtToken(token));}},{key:\"createJwtToken\",value:function createJwtToken(token){return'Bearer '+token;}},{key:\"logout\",value:function logout(){sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE);sessionStorage.removeItem(PASSWORD_SESSION_ATTRIBUTE);sessionStorage.removeItem(TOKEN_SESSION_ATTRIBUTE);}},{key:\"isUserLoggedIn\",value:function isUserLoggedIn(){var user=sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE);if(user===null){return false;}else{return true;}}},{key:\"getLoggedInUserName\",value:function getLoggedInUserName(){var user=sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE);if(user===null){return\"\";}else{return user;}}},{key:\"getLoggedInToken\",value:function getLoggedInToken(){var token=sessionStorage.getItem(TOKEN_SESSION_ATTRIBUTE);if(token===null){return\"\";}else{return token;}}},{key:\"setupAxiosInterceptors\",value:function setupAxiosInterceptors(token){var _this=this;axios.interceptors.request.use(function(config){if(_this.isUserLoggedIn()){config.headers.authorization=token;}return config;});}}]);return AuthenticationService;}();export default new AuthenticationService();","map":{"version":3,"sources":["/Users/Andreivan/git_study/FE_PatrimonyManagement/patrimony-management/src/authentication/AuthenticationService.js"],"names":["axios","API_URL","USER_NAME_SESSION_ATTRIBUTE","PASSWORD_SESSION_ATTRIBUTE","TOKEN_SESSION_ATTRIBUTE","AuthenticationService","username","password","post","token","sessionStorage","setItem","setupAxiosInterceptors","createJwtToken","removeItem","user","getItem","interceptors","request","use","config","isUserLoggedIn","headers","authorization"],"mappings":"wXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,eAAxB,CAEA,GAAMC,CAAAA,2BAA2B,CAAG,mBAApC,CACA,GAAMC,CAAAA,0BAA0B,CAAG,cAAnC,CACA,GAAMC,CAAAA,uBAAuB,CAAG,WAAhC,C,GAEMC,CAAAA,qB,iOAG8BC,Q,CAAUC,Q,CAAU,CAChD,MAAOP,CAAAA,KAAK,CAACQ,IAAN,WAAcP,OAAd,kBAAsC,CACzCK,QAAQ,CAARA,QADyC,CAEzCC,QAAQ,CAARA,QAFyC,CAAtC,CAAP,CAIH,C,8EAE0BD,Q,CAAUG,K,CAAO,CACxCC,cAAc,CAACC,OAAf,CAAuBT,2BAAvB,CAAoDI,QAApD,EACAI,cAAc,CAACC,OAAf,CAAuBP,uBAAvB,CAAgDK,KAAhD,EACA,KAAKG,sBAAL,CAA4B,KAAKC,cAAL,CAAoBJ,KAApB,CAA5B,EACH,C,sDAEcA,K,CAAO,CAClB,MAAO,UAAYA,KAAnB,CACH,C,uCAEQ,CACLC,cAAc,CAACI,UAAf,CAA0BZ,2BAA1B,EACAQ,cAAc,CAACI,UAAf,CAA0BX,0BAA1B,EACAO,cAAc,CAACI,UAAf,CAA0BV,uBAA1B,EACH,C,uDAEgB,CACb,GAAIW,CAAAA,IAAI,CAAGL,cAAc,CAACM,OAAf,CAAuBd,2BAAvB,CAAX,CACA,GAAGa,IAAI,GAAK,IAAZ,CAAkB,CACd,MAAO,MAAP,CACH,CAFD,IAEO,CACH,MAAO,KAAP,CACH,CACJ,C,iEAEqB,CAClB,GAAIA,CAAAA,IAAI,CAAGL,cAAc,CAACM,OAAf,CAAuBd,2BAAvB,CAAX,CACA,GAAGa,IAAI,GAAK,IAAZ,CAAkB,CACd,MAAO,EAAP,CACH,CAFD,IAEO,CACH,MAAOA,CAAAA,IAAP,CACH,CACJ,C,2DAEkB,CACf,GAAIN,CAAAA,KAAK,CAAGC,cAAc,CAACM,OAAf,CAAuBZ,uBAAvB,CAAZ,CACA,GAAGK,KAAK,GAAK,IAAb,CAAmB,CACf,MAAO,EAAP,CACH,CAFD,IAEO,CACH,MAAOA,CAAAA,KAAP,CACH,CACJ,C,sEAEsBA,K,CAAO,gBAC1BT,KAAK,CAACiB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,SAACC,MAAD,CAAY,CACR,GAAG,KAAI,CAACC,cAAL,EAAH,CAA0B,CACtBD,MAAM,CAACE,OAAP,CAAeC,aAAf,CAA+Bd,KAA/B,CACH,CACD,MAAOW,CAAAA,MAAP,CACH,CANL,EAQH,C,qCAGL,cAAe,IAAIf,CAAAA,qBAAJ,EAAf","sourcesContent":["import axios from \"axios\";\nimport { API_URL } from \"../Properties\"\n\nconst USER_NAME_SESSION_ATTRIBUTE = 'authenticatedUser'; \nconst PASSWORD_SESSION_ATTRIBUTE = 'passwordUser'; \nconst TOKEN_SESSION_ATTRIBUTE = 'tokenUser';\n\nclass AuthenticationService {   \n\n \n    executeJwtAuthenticationService(username, password) {\n        return axios.post(`${API_URL}/authenticate`, {\n            username,\n            password\n        })            \n    }\n\n    registerSuccessfulLoginJwt(username, token) {\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE, username);                \n        sessionStorage.setItem(TOKEN_SESSION_ATTRIBUTE, token);\n        this.setupAxiosInterceptors(this.createJwtToken(token));\n    }\n\n    createJwtToken(token) {\n        return 'Bearer ' + token\n    }\n\n    logout() {\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE);\n        sessionStorage.removeItem(PASSWORD_SESSION_ATTRIBUTE);\n        sessionStorage.removeItem(TOKEN_SESSION_ATTRIBUTE);\n    }\n\n    isUserLoggedIn() {        \n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE);        \n        if(user === null) {\n            return false\n        } else {\n            return true\n        }        \n    }\n\n    getLoggedInUserName() {        \n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE);        \n        if(user === null) {\n            return \"\"\n        } else {\n            return user\n        }        \n    }\n\n    getLoggedInToken() {        \n        let token = sessionStorage.getItem(TOKEN_SESSION_ATTRIBUTE);        \n        if(token === null) {\n            return \"\"\n        } else {\n            return token\n        }        \n    }\n\n    setupAxiosInterceptors(token) {\n        axios.interceptors.request.use(\n            (config) => {\n                if(this.isUserLoggedIn()) {\n                    config.headers.authorization = token\n                }\n                return config\n            }\n        )\n    }\n}\n\nexport default new AuthenticationService();"]},"metadata":{},"sourceType":"module"}